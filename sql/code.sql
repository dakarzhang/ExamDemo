--第一题：
--(1)统计20171001至20171007期间累计访问pv大于100的男性用户数。

SELECT COUNT(DISTINCT T.MSISDN)
  FROM (SELECT MSISDN, SUM(PV) PV
          FROM PAGEVISIT A,
               (SELECT MSISDN FROM USER_INFO WHERE SEX = '男') B
         WHERE A.MSISDN = B.MSISDN
           AND A.RECORD_DAY BETWEEN '20171001' AND '20171007'
         GROUP BY MSIDSN
        HAVING SUM(PV) > 100) T;
  
--(2)统计20171001至20171007期间至少连续3天有访问的用户清单。

SELECT DISTINCT MSISDN
  FROM (SELECT MSISDN, TAG, COUNT(*)
          FROM (SELECT MSISDN,
                       RECORD_DAY,
                       RECORD_DAY - ROW_NUMBER() OVER(PARTITION BY MSISDN ORDER BY RECORD_DAY) TAG
                  FROM PAGEVISIT
                 WHERE RECORD_DAY BETWEEN '20171001' AND '20171007'
                 ORDER BY MSISDN, RECORD_DAY)
         GROUP BY MSISDN, TAG
        HAVING COUNT(*) >= 3);

--第二题：统计每个部门中薪酬排名top3的用户列表
--（注：存在多人薪酬相同的情况，如前四人薪酬分别为10万，8万，8万，7万，则返回的结果包含此四人）
--输出以下信息：部门名称|员工姓名|薪酬

SELECT C.DEPT_NAME, A.NAME, A.SALARY
  FROM CX_JINXJ.EMPLOYEE A,
       (SELECT DEPARTMENTID, SALARY, DEPARTMENTID || SALARY DS
          FROM (SELECT DEPARTMENTID,
                       SALARY,
                       ROW_NUMBER() OVER(PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) RN
                  FROM (SELECT DISTINCT DEPARTMENTID, SALARY FROM CX_JINXJ.EMPLOYEE))
         WHERE RN <= 3) B,
       CX_JINXJ.DEPARTMENT C
 WHERE A.DEPARTMENTID || A.SALARY = B.DS
   AND A.DEPARTMENTID = C.DEPARTMENTID
 ORDER BY C.DEPT_NAME, A.SALARY DESC;

--第三题：统计每个部门中薪酬排名top3的用户列表

SELECT A.REQUEST_AT, (CASE WHEN B.REQUEST_AT IS NOT NULL THEN ROUND(B.NOMAL_CANCEL / A.ALL_TRIP, 4)*100 || '%' ELSE '0' END)
  FROM (SELECT REQUEST_AT, COUNT(*) ALL_TRIP
          FROM CX_JINXJ.TRIPS
         WHERE REQUEST_AT BETWEEN '2013-10-01' AND '2013-10-03'
         GROUP BY REQUEST_AT) A,
       (SELECT REQUEST_AT, COUNT(*) NOMAL_CANCEL
          FROM (SELECT ID,
                       CLIEND_ID,
                       DRIVER_ID,
                       DEPARTMENTID,
                       STATUS,
                       REQUEST_AT
                  FROM CX_JINXJ.TRIPS
                 WHERE REQUEST_AT BETWEEN '2013-10-01' AND '2013-10-03') A,
               (SELECT USER_ID FROM CX_JINXJ.USERS WHERE UPPER(BANNED) = 'NO') B
         WHERE NVL(CLIEND_ID, DRIVER_ID) = B.USER_ID
           AND UPPER(A.STATUS) <> 'COMPLETED'
         GROUP BY REQUEST_AT) B
 WHERE A.REQUEST_AT = B.REQUEST_AT(+);
